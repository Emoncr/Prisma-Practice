// // This is your Prisma schema file,
// // learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique

  // ONE TO MANY RELATION
  post Post[]

  // ONE TO ONE RELATION
  profile Profile?

  //MANY TO MANY RELATION
  commnets Comments[]

  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model Post {
  id          Int    @id @default(autoincrement())
  title       String @db.VarChar(120)
  description String @db.LongText

  // ONE TO MANY
  userID Int
  User   User @relation(fields: [userID], references: [id], onDelete: Restrict, onUpdate: Cascade)

  // MANY TO MANY RELATIONS
  comments Comments[]

  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model Profile {
  id Int @id @default(autoincrement())

  firstName String @db.VarChar(20)
  lastName  String @db.VarChar(20)
  phone     String @unique
  city      String

  //ONE TO ONE
  userID Int  @unique
  User   User @relation(fields: [userID], references: [id], onDelete: Restrict, onUpdate: Cascade)

  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model Comments {
  id     Int    @id @default(autoincrement())
  text   String
  // Many to many
  postID Int
  Post   Post   @relation(fields: [postID], references: [id], onDelete: Restrict, onUpdate: Cascade)

  userID Int
  User   User @relation(fields: [userID], references: [id], onDelete: Restrict, onUpdate: Cascade)

  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}
